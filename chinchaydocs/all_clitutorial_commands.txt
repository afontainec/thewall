rm -r test_chinchay
psql postgres -c "DROP DATABASE test_chinchay"

npm install express -g
express test_chinchay && cd test_chinchay
npm install pg -s
npm install knex -s
npm install ejs -s
npm install
psql postgres -c "CREATE DATABASE test_chinchay"
mkdir database
mkdir database/migrations
echo "const path = require('path');

module.exports = {
  test: {
    client: 'pg',
    connection: 'postgres://localhost:5432/test_chinchay',
    migrations: {
      directory: path.join(__dirname, '/database/migrations'),
    },
    seeds: {
      directory: path.join(__dirname, '/database/seeds/test'),
    },
    acquireConnectionTimeout: 10000,
  },
  development: {
    client: 'pg',
    connection: 'postgres://localhost:5432/test_chinchay',
    migrations: {
      directory: path.join(__dirname, '/database/migrations'),
    },
    seeds: {
      directory: path.join(__dirname, '/database/seeds/development'),
    },
    acquireConnectionTimeout: 10000,
  },
  production: {
    client: 'pg',
    connection: process.env.DATABASE_URL || 'postgres://localhost:5432/test_chinchay',
    migrations: {
      directory: path.join(__dirname, '/database/migrations'),
    },
    seeds: {
      directory: path.join(__dirname, '/database/seeds/production'),
    },
    acquireConnectionTimeout: 10000,
  },
  staging: {
    client: 'pg',
    connection: process.env.DATABASE_URL || 'postgres://localhost:5432/test_chinchay',
    migrations: {
      directory: path.join(__dirname, '/database/migrations'),
    },
    seeds: {
      directory: path.join(__dirname, '/database/seeds/production'),
    },
    acquireConnectionTimeout: 10000,
  },
};" > knexfile.js
echo "const environment = process.env.NODE_ENV || 'development';
const config = require('./knexfile')[environment];
module.exports = require('knex')(config);" > knex.js
echo "const path = require('path');

module.exports = {
  models: {
    directory: path.join(__dirname, '/models'),
  },
  controllers: {
    directory: path.join(__dirname, '/controllers')
  },
  views: {
    directory: path.join(__dirname, '/views')
  },
  routes: {
    directory: path.join(__dirname, '/routes')
  },
  knex:  path.join(__dirname, 'knex.js')
};" > .chainfile.js
